{"version":3,"sources":["login.js","renderInput.js","funcs.js","pipe.js","fselect.js","identities.js","groups.js","main.js","App.js","index.js"],"names":["Login","props","id","util","encode","peerInfo","keys","publicKey","encoding","className","alt","src","initialValues","url","localStorage","getItem","validate","values","errors","test","onSubmit","setSubmitting","setErrors","setItem","isSubmitting","htmlFor","type","name","readOnly","component","disabled","unflatten","require","flatten","RenderInput","item","types","length","required","renderLabel","field","form","setFieldValue","touched","meta","onChange","e","forEach","element","index","fieldName","split","slice","push","join","getName","f","target","value","isNaN","undefined","error","onBlur","checked","Object","entries","safe","map","fitem","i","key","obj","onClick","icon","faMinusCircle","faPlusCircle","parseInt","groups","createField","superstruct","toInputFormat","items","newItems","input","defaults","schema","usage","kind","_","isPlainObject","0","isString","reduce","a","Array","isArray","mapTypes","nTypes","parseTypes","newTypes","indexOf","replace","item2","s","data","trim","d","err","message","action","UpdateCommands","commands","setCommands","defaultValues","useFormikContext","useEffect","ncommands","b","fValues","delimiter","command","k2","arr","v","ScrollToBottom","result","elementRef","useRef","current","scrollIntoView","block","ref","Functions","connection","expanded","useState","setData","currentPipe","setPipe","pipeError","setPipeError","setResult","inputFormat","commandsFormat","defaultValuesForCommands","abortable","abort","peer","addrs","Abortable","live","old","drain","findIndex","ele","cuid","ts","triggerPipe","open","style","display","justifyContent","alignItems","preventDefault","stopPropagation","filter","faMinusSquare","faChevronUp","faChevronDown","triggerFunc","faPlusSquare","enableReinitialize","splice","res","p","_done","done","lb","actions","func","args","asyncToSource","cb","promiseToSource","last","Pipe","JSON","stringify","classParentString","trigger","triggerWhenOpen","desc","margin","faPlay","faStop","color","validateOnChange","validateOnBlur","FSelect","Identitites","api","modalData","setModalData","useModal","appElement","document","getElementById","portalClassName","ariaHideApp","overlay","backgroundColor","zIndex","content","left","maxWidth","border","bottom","isOpen","onRequestClose","hideAdd","isValid","identities","put","handleChange","handleBlur","handleSubmit","msg","fontSize","padding","cursor","position","top","right","faWindowClose","showAdd","openAddModal","hideDel","remove","showDel","openDelModal","useCallback","setGroups","abortable2","ls","delete","faTrash","faUserPlus","identity","Date","toLocaleString","render","arrayHelpers","groupID","gIndex","label","isSearchable","classNamePrefix","options","Groups","allow","setActions","group","NoMatch","Main","location","setLocation","menu","title","faAddressBook","path","load","faUsers","Identities","faUsersCog","setExpanded","paddingLeft","flexDirection","background","onToggle","onSelect","selected","Toggle","Nav","defaultSelected","eventKey","pathname","state","fromDashboard","k","getPeerInfo","PeerInfo","toJSON","fromJSON","App","setConnection","l","useLocation","routes","Connect","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a8d9f5ed.chunk.js","sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport util from \"icebreaker-network/lib/util\"\r\n\r\nfunction Login(props) {\r\n\r\n  const id = util.encode(props.peerInfo.keys.publicKey, props.peerInfo.encoding);\r\n\r\n  return (<div className=\"Login\">\r\n    <img alt=\"Alligator Island\"  className=\"logo\" src=\"./logo.png\" />\r\n    <h1>Alligator Island</h1>\r\n\r\n    <Formik\r\n      initialValues={{ id, url: localStorage.getItem('serverUrl') || \"\" }}\r\n      validate={values => {\r\n        const errors = {};\r\n        if (!values.id) errors.id = 'Required';\r\n        if (!values.url) errors.url = 'Required'\r\n        else if (!/^(shs\\+ws:\\/\\/)+(?:\\w+@)+(?:\\S+)$/.test(values.url)) errors.url = \"Invalid Alligator address\";\r\n\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting, setErrors }) => {\r\n        localStorage.setItem(\"serverUrl\", values.url);\r\n        if (props.onSubmit) props.onSubmit(values, { setSubmitting, setErrors })\r\n      }}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form className=\"form\">\r\n          <label htmlFor=\"id\">Your ID:</label>\r\n          <Field type=\"text\" name=\"id\" readOnly />\r\n          <ErrorMessage name=\"email\" component=\"div\" className=\"error\" />\r\n          <label htmlFor=\"url\">Server URL*:</label>\r\n          <Field type=\"url\" name=\"url\" />\r\n          <ErrorMessage name=\"url\" component=\"div\" className=\"error\" />\r\n          <small>Add your identity on server with command:<br /><pre>\r\n            <code>\r\n              alligator friends.put {id}\r\n            </code>\r\n          </pre></small>\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            Connect\r\n            </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n\r\n  </div>)\r\n}\r\nexport default Login","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { Field } from 'formik';\r\nimport Switch from \"react-switch\"\r\nconst unflatten = require('flat').unflatten;\r\nconst flatten = require('flat').flatten;\r\n\r\nfunction RenderInput({ item, readOnly }) {\r\n\r\n  const renderLabel = (item) => item.types.length > 1 ? (<label htmlFor={item.name}>{item.type}{item.required ? \"\" : \"?\"}</label>) : ''\r\n  const getName = (field, index) => {\r\n\r\n    let split = field.name.split(\"_\");\r\n    split = split.slice(0, split.length - 1)\r\n    split.push(index)\r\n    return split.join(\"_\")\r\n\r\n  }\r\n  const createField = (item) => {\r\n    if (item.type === \"string\" || item.type === \"number\") {\r\n      return (<Field name={item.name} type=\"text\" readOnly={readOnly} validate={readOnly ? null : item.validate}>\r\n        {({\r\n          field,\r\n          form: { touched, errors, setFieldValue, values },\r\n          meta,\r\n        }) => (\r\n          <div key={\"string_\" + item.name}>\r\n            <input key={\"input\" + item.name} readOnly={readOnly} {...field} onChange={(e) => {\r\n              field.onChange(e)\r\n\r\n              item.types.forEach((element, index) => {\r\n                if (element === item.type) return\r\n                let fieldName = getName(field, index);\r\n                let f = e.target.value\r\n                if (element === \"boolean\") {\r\n                  if (f === \"true\" || f === 1 || f === \"1\") return setFieldValue(fieldName, true, true)\r\n                  return setFieldValue(fieldName, false, true)\r\n                }\r\n\r\n                if (element === \"number\") {\r\n                  if (!isNaN(e.target.value)) setFieldValue(fieldName, e.target.value, true)\r\n                }\r\n\r\n                if (element === \"string\") {\r\n                  setFieldValue(fieldName, e.target.value, false)\r\n                }\r\n\r\n                if (element === \"array\") {\r\n                  setFieldValue(fieldName, undefined)\r\n                }\r\n                if (element === \"object\") {\r\n                  setFieldValue(fieldName, undefined)\r\n                }\r\n              })\r\n\r\n            }} />\r\n            {meta.touched && meta.error && (\r\n              <div className=\"error\">{meta.error}</div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n      </Field>)\r\n    }\r\n\r\n    if (item.type === \"boolean\") {\r\n      return (<Field name={item.name} validate={readOnly ? null : item.validate} type=\"switch\" >\r\n        {({\r\n          field,\r\n          form: { touched, errors, values, setFieldValue },\r\n          meta,\r\n\r\n        }) => (\r\n          <div key={\"boolean_container_\" + item.name}>\r\n            <Switch name={field.name} disabled={readOnly} onChange={(e) => {\r\n              if (e === \"true\" || e === true || e === 1) e = true\r\n              else e = false\r\n\r\n              item.types.forEach((element, index) => {\r\n                let split = field.name.split(\"_\");\r\n                split = split.slice(0, split.length - 1)\r\n                split.push(index)\r\n                split = split.join(\"_\")\r\n                setFieldValue(split, e)\r\n\r\n              })\r\n\r\n            }} onBlur={field.onBlur} value={field.value || false} checked={field.value || false} />\r\n            {meta.touched && meta.error && (\r\n              <div className=\"error\">{meta.error}</div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Field>\r\n      )\r\n    }\r\n\r\n    if (item.type === \"object\") {\r\n      return (<Field\r\n\r\n        name={item.name}\r\n        validate={readOnly ? null : item.validate}\r\n      >\r\n        {({ form, field, meta }) => {\r\n          return (\r\n            <div key={\"object_content_\" + item.name}>\r\n              {\r\n                field.value ? Object.entries(flatten(field.value, { safe: false })).map((fitem, i) => {\r\n                  return (<div key={\"addbar_\" + i + \"_\" + item.name} className=\"addbar\"><label>{item.key + \".\" + fitem[0]}</label><input type=\"text\" readOnly={readOnly} onChange={(e) => {\r\n                    if (readOnly === true) return\r\n                    let obj = field.value ? flatten(field.value, { safe: false }) : {}\r\n                    obj[fitem[0]] = e.target.value\r\n                    form.setFieldValue(field.name, unflatten(obj, { safe: false }))\r\n\r\n                  }} value={fitem[1]} />\r\n                    {readOnly ? \"\" : (<button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        let obj = field.value ? flatten(field.value, { safe: false }) : {}\r\n\r\n                        delete obj[fitem[0]]\r\n                        form.setFieldValue(field.name, unflatten(obj, { safe: false }))\r\n\r\n\r\n                      }}\r\n                    >\r\n                      <FontAwesomeIcon icon={faMinusCircle}></FontAwesomeIcon>\r\n                    </button>)}\r\n                  </div>)\r\n\r\n                }) : ''\r\n              }\r\n              {meta.touched && meta.error && (\r\n                <div className=\"error\">{meta.error}</div>\r\n              )}\r\n              {readOnly ? \"\" : (<div key={\"addbar2_\" + item.name} className=\"addbar\">\r\n\r\n                <label>Key:</label>\r\n                <input name={\"key_\" + item.name} value={form.values[\"key_\" + item.name]} readOnly={readOnly} type=\"text\" onChange={\r\n                  (e) => form.setFieldValue(\"key_\" + item.name, e.target.value)\r\n                } />\r\n                <label>Value:</label>\r\n                <input name={\"value_\" + item.name} value={form.values[\"value_\" + item.name]} readOnly={readOnly} type=\"text\" onChange={\r\n                  (e) => form.setFieldValue(\"value_\" + item.name, e.target.value)\r\n                } />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    let obj = field.value ? flatten(field.value, { safe: false }) : {}\r\n\r\n                    obj[form.values[\"key_\" + item.name]] = form.values[\"value_\" + item.name]\r\n\r\n                    form.setFieldValue(\"value_\" + item.name, \"\", false)\r\n                    form.setFieldValue(\"key_\" + item.name, \"\", false)\r\n                    form.setFieldValue(field.name, unflatten(obj, { safe: false }))\r\n                  }}\r\n                >\r\n                  <FontAwesomeIcon icon={faPlusCircle}></FontAwesomeIcon>\r\n                </button>\r\n              </div>\r\n              )}\r\n            </div>\r\n          )\r\n        }}\r\n\r\n      </Field>)\r\n    }\r\n\r\n    if (item.type === \"array\") {\r\n      return (<Field\r\n        key={item.name}\r\n        name={item.name}\r\n        validate={readOnly ? null : item.validate}>\r\n        {({ form, field, meta }) => {\r\n          return (\r\n            <div key={\"array_content_\" + item.name}>\r\n\r\n              {\r\n                field.value ? Object.entries(flatten(field.value, { safe: true })).map((fitem, index) => {\r\n                  return (<div key={\"array_addbar_\" + item.name + \"_\" + index} className=\"addbar\">\r\n                    <label>{(isNaN(item.key) ? item.key : parseInt(item.key) + 1) + \".\" + fitem[0]}</label>\r\n                    <input readOnly={readOnly} type=\"text\" onChange={(e) => {\r\n                    let obj = { groups: field.value ? flatten(field.value, { safe: true }) : [] }\r\n                    if (readOnly) return;\r\n                    obj.groups[fitem[0]] = e.target.value\r\n                    form.setFieldValue(field.name, unflatten(obj, { safe: true }).groups)\r\n\r\n                  }} value={fitem[1]} />\r\n                    {readOnly ? \"\" : (<button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n\r\n                        let obj = { groups: field.value ? flatten(field.value, { safe: true }) : {} }\r\n\r\n                        delete obj.groups[fitem[0]]\r\n                        form.setFieldValue(field.name, unflatten(obj, { safe: true }).groups)\r\n\r\n\r\n                      }}\r\n                    >\r\n                      <FontAwesomeIcon icon={faMinusCircle}></FontAwesomeIcon>\r\n                    </button>)}\r\n                  </div>)\r\n\r\n                }) : ''\r\n              }\r\n              {meta.touched && meta.error && (\r\n                <div className=\"error\">{meta.error}</div>\r\n              )}\r\n              {readOnly ? \"\" : (<div className=\"addbar\">\r\n\r\n                <label>Key:</label>\r\n                <input name={\"key_\" + item.name} value={form.values[\"key_\" + item.name]} type=\"text\" readOnly={readOnly} onChange={\r\n                  (e) => form.setFieldValue(\"key_\" + item.name, e.target.value)\r\n                } />\r\n                <label>Value:</label>\r\n                <input name={\"value_\" + item.name} value={form.values[\"value_\" + item.name]} type=\"text\" readOnly={readOnly} onChange={\r\n                  (e) => form.setFieldValue(\"value_\" + item.name, e.target.value)\r\n                } />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    let obj = { groups: field.value ? flatten(field.value, { safe: true }) : [] }\r\n                    obj.groups[form.values[\"key_\" + item.name]] = form.values[\"value_\" + item.name]\r\n                    form.setFieldValue(field.name, unflatten(obj, { safe: true }).groups)\r\n                    form.setFieldValue(\"value_\" + item.name, \"\", false)\r\n                    form.setFieldValue(\"key_\" + item.name, \"\", false)\r\n                  }}\r\n                >\r\n                  <FontAwesomeIcon icon={faPlusCircle}></FontAwesomeIcon>\r\n                </button>\r\n              </div>)}\r\n\r\n            </div>\r\n          )\r\n        }}\r\n      </Field>)\r\n    }\r\n    return (<div></div>)\r\n  }\r\n\r\n\r\n  return (<div>{renderLabel(item)} { createField(item)} </div>)\r\n\r\n}\r\n\r\nexport default RenderInput\r\n","import { _ } from \"alligator-client\"\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport Abortable from 'pull-abortable'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronUp, faStop, faChevronDown, faPlusSquare, faPlay, faMinusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport Collapsible from 'react-collapsible';\r\nimport RenderInput from './renderInput'\r\nimport { Formik, Form, useFormikContext } from 'formik';\r\nimport cuid from 'cuid';\r\nimport Pipe from \"./pipe\";\r\n\r\nconst superstruct = require(\"superstruct\").superstruct\r\nconst unflatten = require('flat').unflatten;\r\n\r\nfunction toInputFormat(items) {\r\n  const newItems = []\r\n\r\n  items.forEach((item) => {\r\n    const input = superstruct()(item.input || {}, item.defaults || \"\")\r\n    let schema = {}\r\n    let defaults = {}\r\n    let usage = {};\r\n\r\n    item.kind = input.kind\r\n    if (input.kind === \"object\") {\r\n      schema = input.schema\r\n\r\n      if (item.defaults && _.isPlainObject(item.defaults))\r\n        defaults = item.defaults\r\n\r\n\r\n      if (item.usage && _.isPlainObject(item.usage)) {\r\n        usage = item.usage\r\n      }\r\n    }\r\n\r\n    if (input.kind === \"scalar\") {\r\n      schema = { 0: input.schema }\r\n\r\n      if (item.defaults && _.isString(item.defaults)) defaults = { 0: item.defaults }\r\n      if (item.usage && _.isString(item.usage)) usage = { 0: item.usage }\r\n\r\n    }\r\n\r\n    if (input.kind === \"tuple\") {\r\n      schema = input.schema.reduce((a, value, index) => {\r\n        a[(index)] = value\r\n\r\n        return a\r\n      }, {})\r\n\r\n      if (item.usage && Array.isArray(item.usage)) {\r\n        usage = item.defaults.reduce((a, value, index) => {\r\n          a[(index)] = value\r\n\r\n          return a\r\n        }, {})\r\n      }\r\n      if (item.defaults && Array.isArray(item.defaults)) {\r\n        defaults = item.defaults.reduce((a, value, index) => {\r\n          a[(index)] = value\r\n\r\n          return a\r\n        }, {})\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n    if (schema)\r\n      for (let i of Object.keys(schema))\r\n        if (defaults[i] === undefined) defaults[i] = undefined\r\n\r\n\r\n    const parseTypes = (types) => {\r\n      types = types.split(\"|\")\r\n      const nTypes = []\r\n      for (let i in types) {\r\n        nTypes.push(types[i])\r\n\r\n      }\r\n\r\n      return nTypes\r\n    }\r\n\r\n    const mapTypes = (types, key) => {\r\n      types = parseTypes(types)\r\n      const newTypes = []\r\n\r\n      types.forEach((type, index) => {\r\n        let required = type.indexOf(\"?\") === -1\r\n        type = type.replace(\"?\", \"\")\r\n        const name = item.index + \"_\" + key + (types.length > 1 ? (\"_\" + index) : \"\");\r\n\r\n        let item2 = { key, type, name, types, id: item.index, required: required }\r\n        const s = superstruct()(types.join(\"|\"), item2.value)\r\n\r\n        item2.validate = (data) => {\r\n          try {\r\n            if (_.isString(data) && data.trim().length === 0) data = null\r\n            if (_.isPlainObject(data) && Object.keys(data).length === 0) data = null;\r\n            if (Array.isArray(data) && data.length === 0) data = null;\r\n            if (!data)\r\n              for (let d of newTypes) {\r\n                if (d.value !== undefined || d.value !== null) {\r\n                  data = d.value\r\n                  break;\r\n                }\r\n              }\r\n            s(data)\r\n          }\r\n          catch (err) {\r\n            return err.message\r\n          }\r\n          return null\r\n        }\r\n\r\n        if (type === \"string\") {\r\n\r\n          item2.usage = _.isString(usage[key]) ? usage[key] : undefined\r\n          item2.value = _.isString(defaults[key]) ? defaults[key] : undefined\r\n\r\n          newTypes.push(item2)\r\n          return\r\n        }\r\n\r\n        if (type === \"number\") {\r\n\r\n          item2.usage = usage[key]\r\n          item2.value = !isNaN(defaults[key]) ? defaults[key] : undefined\r\n\r\n          newTypes.push(item2)\r\n          return\r\n\r\n        }\r\n\r\n        if (type === \"object\") {\r\n\r\n          item2.usage = usage[key]\r\n          item2.value = _.isPlainObject(defaults[key]) ? defaults[key] : undefined\r\n\r\n          newTypes.push(item2)\r\n          return\r\n\r\n        }\r\n\r\n        if (type === \"array\") {\r\n          item2.usage = usage[key]\r\n          item2.value = Array.isArray(defaults[key]) ? defaults[key] : undefined\r\n          newTypes.push(item2)\r\n          return\r\n        }\r\n\r\n        if (type === \"boolean\") {\r\n          item2.usage = usage[key]\r\n\r\n          item2.value = defaults[key] !== null ? defaults[key] : false\r\n          newTypes.push(item2)\r\n          return\r\n        }\r\n\r\n      })\r\n\r\n      return newTypes\r\n    }\r\n    Object.keys(schema).reduce((a, key) => {\r\n      a.push({ id: item.index, action: item.action, types: mapTypes(schema[key], key), type: schema[key] })\r\n\r\n      return a\r\n    }, []).forEach((item) => newItems.push(item))\r\n\r\n\r\n  })\r\n  return newItems\r\n}\r\n\r\nconst UpdateCommands = ({ commands, setCommands, defaultValues }) => {\r\n  const { values } = useFormikContext();\r\n  useEffect(() => {\r\n    const ncommands = commands.reduce((a, b) => {\r\n      a[b.index] = b\r\n      return a;\r\n    }, {})\r\n    if (values) {\r\n      const fValues = unflatten(values, { safe: false, delimiter: \"_\" })\r\n\r\n      for (var key of Object.keys(fValues)) {\r\n        const command = ncommands[key]\r\n        if (command) {\r\n          const value = fValues[key]\r\n          if (command.kind === \"object\") {\r\n            const d = Object.keys(value)\r\n\r\n            for (const k2 of d) {\r\n              if (value[k2]) {\r\n                const isOr = command.input[k2] && command.input[k2].indexOf(\"|\") !== -1\r\n                if (isOr) {\r\n                  if (!command.defaults) command.defaults = {}\r\n                  const arr = value[k2]\r\n                  if (Array.isArray(arr)) {\r\n\r\n                    for (var v of arr) {\r\n                      if (v !== null) {\r\n                        command.defaults[k2] = v;\r\n                        break;\r\n                      }\r\n                    }\r\n                  }\r\n\r\n                }\r\n                else {\r\n\r\n                  if (!command.defaults) command.defaults = {}\r\n                  command.defaults[k2] = value[k2]\r\n                }\r\n\r\n              }\r\n            }\r\n          }\r\n          if (command.kind === \"scalar\") {\r\n            command.defaults = value\r\n          }\r\n          if (command.kind === \"tuple\") {\r\n            if (Array.isArray(value)) command.defaults = value\r\n          }\r\n        }\r\n\r\n\r\n      }\r\n\r\n      setCommands(commands)\r\n\r\n    }\r\n  }, [values])\r\n\r\n\r\n  return null;\r\n}\r\n\r\nconst ScrollToBottom = ({ result }) => {\r\n  const elementRef = useRef();\r\n  useEffect(() => {\r\n    elementRef.current.scrollIntoView({ block: \"end\" })\r\n  }, [result]);\r\n  return <div ref={elementRef} />;\r\n};\r\n\r\nfunction Functions({ connection, expanded }) {\r\n\r\n  const [data, setData] = useState([])\r\n  const [commands, setCommands] = useState([])\r\n  const [currentPipe, setPipe] = useState(null)\r\n  const [pipeError, setPipeError] = useState(null)\r\n\r\n\r\n  const [result, setResult] = useState([])\r\n\r\n  let inputFormat = toInputFormat(data)\r\n\r\n  const defaultValues = inputFormat.reduce((a, b) => {\r\n    b.types.forEach(function (item) {\r\n      a.push(item)\r\n    })\r\n    return a;\r\n  }, []).reduce((a, b) => {\r\n    a[b.name] = b.value\r\n    return a\r\n  }, {})\r\n\r\n  const commandsFormat = toInputFormat(commands)\r\n  const defaultValuesForCommands = commandsFormat.reduce((a, b) => {\r\n    b.types.forEach(function (item) {\r\n      a.push(item)\r\n    })\r\n    return a;\r\n  }, []).reduce((a, b) => {\r\n    a[b.name] = b.value\r\n    return a\r\n  }, {})\r\n\r\n  useEffect(() => {\r\n    let abortable\r\n    const abort = (err) => {\r\n      if (abortable) {\r\n        abortable.abort(err || true)\r\n        abortable = null\r\n      }\r\n    }\r\n    if (connection && connection.peer && connection.peer.addrs) {\r\n\r\n      abortable = Abortable()\r\n\r\n      _(connection.peer.addrs({ live: true, old: true }), abortable, _.drain((item) => {\r\n\r\n        if (!_.isPlainObject(item)) return\r\n        const index = data.findIndex((ele) => ele.action === item.action)\r\n        if (index === -1) {\r\n          data.push({ index: cuid(), ...item })\r\n          setData([...data])\r\n          return\r\n        }\r\n\r\n        if (data[index].ts < item.ts) {\r\n\r\n          item.index = data[index].index\r\n          data[index] = item\r\n          setData([...data])\r\n        }\r\n\r\n      }, abort))\r\n\r\n      return abort\r\n    }\r\n  }, [connection])\r\n\r\n\r\n  let triggerPipe = (open, item, index) => {\r\n\r\n    return (<div key={\"command_collapse_trigger_\" + index} style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>{item.action} <div>\r\n      <button onClick={(e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setCommands(commands.filter((i) => i.index !== item.index))\r\n      }}><FontAwesomeIcon icon={faMinusSquare} /></button>\r\n\r\n      <button><FontAwesomeIcon icon={open ? faChevronUp : faChevronDown} /></button></div>\r\n    </div>)\r\n  }\r\n\r\n  let triggerFunc = (open, item, index) =>\r\n  (<div key={\"func_collapse_trigger_\" + index} style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>{item.action} <div>\r\n    <button onClick={(e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setCommands([...commands, { ...item, index: cuid() }])\r\n    }}><FontAwesomeIcon icon={faPlusSquare} /></button>\r\n\r\n    <button><FontAwesomeIcon icon={open ? faChevronUp : faChevronDown} /></button></div>\r\n  </div>)\r\n\r\n\r\n  const onSubmit = (value, { setSubmitting, isSubmitting }) => {\r\n    setPipeError(null)\r\n\r\n    result.splice(0)\r\n    let res = []\r\n    let p = Pipe(commands, connection, (data) => {\r\n      result.slice(0).forEach((i) => res.push(i))\r\n      if (data !== undefined) {\r\n        try {\r\n          res.push(JSON.stringify(data, 2));\r\n        }\r\n        catch (err) {\r\n          res.push(data);\r\n        }\r\n      }\r\n\r\n      setResult(res)\r\n\r\n\r\n\r\n    }, (err) => {\r\n\r\n      setPipe(null)\r\n      setSubmitting(false)\r\n      if (err) setPipeError(err && err.message ? err.message : err)\r\n    })\r\n\r\n    setPipe({ abort: p })\r\n\r\n  }\r\n\r\n  return (<div key={\"functions_container\"}>\r\n    <div key={\"pipeline\"} className=\"pipeline\">\r\n      <h2>Pipeline</h2>\r\n\r\n      <Formik enableReinitialize={true} onSubmit={onSubmit} initialValues={defaultValuesForCommands}  >\r\n        {({ isSubmitting }) => {\r\n\r\n          return (<Form>\r\n            <UpdateCommands setCommands={setCommands} commands={commands} defaultValues={defaultValues} />\r\n\r\n\r\n            {commands.map((item, index) => (\r\n              <Collapsible\r\n                key={`command_${index}_${item.index}_${item.action}`} classParentString=\"func\"\r\n                trigger={triggerPipe(false, item, index)} triggerWhenOpen={triggerPipe(true, item, index)}>\r\n                {item.desc}\r\n                <h3 style={{ margin: \".8em 0\", display: \"block\" }}>Options:</h3>\r\n                {\r\n                  commandsFormat.map((item2) => {\r\n                    if (item2.id === item.index)\r\n                      return item2[\"types\"].map((field, index) => {\r\n                        return (<div key={\"functions_types_\" + index + \"_\" + item.index}>{index === 0 ? (<label key={\"functions_label_\" + index + \"_\" + item.index}>{field.key && !isNaN(field.key) ? parseInt(field.key) + 1 : field.key} ({item2.type}) {field.usage !== undefined ? field.usage : ''}</label>) : ''}\r\n\r\n\r\n                          <RenderInput key={\"commands_render_\" + index + \"_\" + item.index} readOnly={false} item={field}></RenderInput>\r\n                          {index !== item2.types.length - 1 ? (<label key={\"functions_label3_\" + index + \"_\" + item.index}>or</label>) : ''}\r\n                        </div>)\r\n\r\n                      }\r\n                      )\r\n                    return ''\r\n                  })\r\n                }\r\n\r\n              </Collapsible>\r\n\r\n            ))}\r\n            <div className=\"formbuttons\">\r\n\r\n              <button disabled={isSubmitting || commands.length === 0} type=\"submit\">RUN <FontAwesomeIcon icon={faPlay} /></button>\r\n              <button onClick={(e) => {\r\n                e.preventDefault()\r\n                e.stopPropagation()\r\n                if (currentPipe) currentPipe.abort()\r\n              }} style={{ display: currentPipe !== null ? \"block\" : \"none\" }} >Abort <FontAwesomeIcon icon={faStop} /></button>\r\n            </div>\r\n\r\n          </Form>)\r\n        }}\r\n      </Formik>\r\n\r\n      <h3>Result:</h3>\r\n      <code className=\"result\">\r\n        {result.join(\"\\n\\n\")}\r\n        <br />\r\n        <br />\r\n\r\n        {pipeError ? (<span style={{ color: \"red\" }}>{pipeError}</span>) : ''}\r\n        <ScrollToBottom result={result}></ScrollToBottom>\r\n      </code>\r\n    </div>\r\n    <div key={\"functions\"} className=\"functions\">\r\n\r\n      <h2>Functions</h2>\r\n      <Formik enableReinitialize={true} initialValues={defaultValues} validateOnChange={false} validateOnBlur={false} >\r\n        <Form>\r\n          {data.map((item, index) => (<Collapsible\r\n            key={`func_collapse_${index}_${item.action}`} classParentString=\"func\"\r\n            trigger={triggerFunc(false, item, index)} triggerWhenOpen={triggerFunc(true, item, index)}>\r\n            {item.desc}\r\n\r\n            <h3 style={{ margin: \".8em 0\", display: \"block\" }}>Options:</h3>\r\n            {\r\n              inputFormat.map((item2) => {\r\n                if (item2.id === item.index)\r\n                  return item2[\"types\"].map((field, index) => {\r\n                    return (<div key={\"functions_container_div_\" + index + \"_\" + item.index}>{index === 0 ? (<label key={\"functions_label2_\" + index + \"_\" + item.index}>{field.key} ({item2.type}) {field.usage !== undefined ? field.usage : ''}</label>) : ''}\r\n                      <RenderInput key={\"functions_render_\" + index + \"_\" + item.index} readOnly={true} item={field}></RenderInput>\r\n                      {index !== item2.types.length - 1 ? (<label key={\"functions_label4_\" + index + \"_\" + item.index}>or</label>) : ''}\r\n                    </div>)\r\n\r\n                  }\r\n                  )\r\n                return ''\r\n              })\r\n            }\r\n\r\n          </Collapsible>\r\n\r\n          ))}\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  </div>)\r\n}\r\nexport default Functions","import { _ } from \"alligator-client\"\r\nimport Abortable from 'pull-abortable'\r\nimport promiseToSource from 'pull-from-promise'\r\nimport asyncToSource from \"pull-async\"\r\n\r\nimport { flatten } from 'flat'\r\n\r\nexport default function Pipe(commands, connection, drain, _done) {\r\n  let done = (...args) => {\r\n    if (_done) {\r\n\r\n      _done(...args)\r\n      return;\r\n    }\r\n  }\r\n  let lb = flatten(connection.lb, { safe: false })\r\n\r\n  let actions = []\r\n  let abortable = Abortable()\r\n\r\n  const abort = (err) => {\r\n    if (abortable) {\r\n      abortable.abort(err || true)\r\n      abortable = null\r\n    }\r\n  }\r\n\r\n\r\n  for (let command of commands) {\r\n    let func = lb[command.action]\r\n    let args = command.defaults || []\r\n\r\n    if (command.kind === \"scalar\") if (command.defaults) args = command.defaults\r\n    if (command.kind === \"object\") if (command.defaults) args = [command.defaults]\r\n    if (command.kind === \"tulpe\") if (command.defaults) args = command.defaults\r\n\r\n    if (!func) return done(command.action + \" not found on lb\")\r\n    if (func.type === \"async\" || func.type === \"sync\")\r\n      actions.push(asyncToSource((cb) => {\r\n        func(...args, cb)\r\n      }))\r\n\r\n    else if (command.type === \"promise\")\r\n      actions.push(promiseToSource(func(args)))\r\n\r\n    else if (command.type === \"sink\") {\r\n      actions.push(func(...args, done))\r\n\r\n    }\r\n    else {\r\n      actions.push(func(...args))\r\n    }\r\n\r\n  }\r\n\r\n  if (commands.length > 0) {\r\n\r\n    actions.push(abortable)\r\n    const last = commands[commands.length - 1];\r\n    if (last && last.type !== \"sink\") actions.push(_.drain(drain, done))\r\n  }\r\n\r\n  _(...actions)\r\n\r\n  return abort\r\n}","import Select from 'react-select'\r\nimport { Field } from 'formik'\r\n\r\nfunction FSelect({ name, ...args }) {\r\n  return (<Field\r\n    name={name}\r\n  >\r\n    {({ form, field, meta }) => {\r\n      return (<Select {...args} onChange={(e) => {\r\n        form.setFieldValue(name, e.value)\r\n      }} ></Select>)\r\n    }}\r\n  </Field>)\r\n}\r\n\r\n\r\nexport default FSelect","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { _ } from 'alligator-client'\r\nimport Abortable from 'pull-abortable'\r\nimport { useModal } from \"react-modal-hook\";\r\nimport ReactModal from 'react-modal';\r\nimport { Formik, ErrorMessage, Field, FieldArray, Form } from 'formik';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faWindowClose, faChevronUp, faChevronDown, faUserPlus, faPlusCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport Collapsible from 'react-collapsible';\r\nimport FSelect from './fselect';\r\nconst unflatten = require('flat').unflatten;\r\nconst flatten = require('flat').flatten;\r\nfunction Identitites({ connection, expanded }) {\r\n  const api = connection.peer\r\n  const [modalData, setModalData] = useState(null);\r\n\r\n  const [showAdd, hideAdd] = useModal((...args) => (\r\n    <ReactModal appElement={document.getElementById('#root')} portalClassName=\"Modal\" ariaHideApp={false} style={\r\n      {\r\n        overlay:\r\n        {\r\n          backgroundColor: \"rgba(0, 0, 0, 0.75)\",\r\n          zIndex: 1200\r\n        },\r\n        content: { left: expanded ? \"240px\" : \"64px\", maxWidth: \"760px\", border: \"5px solid lightgray\", margin: \"0px auto\", bottom: \"auto\" }\r\n\r\n      }} isOpen onRequestClose={() => hideAdd()}>\r\n      <h1 >Add identity </h1>\r\n\r\n      <Formik\r\n        initialValues={{ id: '', name: '' }}\r\n        validate={values => {\r\n          let errors = {};\r\n          if (!values.id) {\r\n            errors.id = 'Required';\r\n          }\r\n\r\n\r\n          return errors;\r\n        }}\r\n        onSubmit={(values, { setSubmitting, setErrors, isValid }) => {\r\n          api.identities.put({ id: values.id, name: values.name }, function (err) {\r\n            if (err) {\r\n              setErrors({ id: err.message })\r\n              setSubmitting(false);\r\n              return false;\r\n            }\r\n            setSubmitting(false);\r\n            hideAdd()\r\n          });\r\n\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          /* and other goodies */\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"colgroup\">\r\n\r\n              <label htmlFor=\"id\"> Id (string) </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"id\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.id}\r\n              />\r\n\r\n              <ErrorMessage name=\"id\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n            </div>\r\n\r\n            <div className=\"colgroup\">\r\n\r\n              <label htmlFor=\"name\"> name (string?) </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.name}\r\n              />\r\n\r\n              <ErrorMessage name=\"name\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n            </div>\r\n\r\n            <button type=\"submit\" disabled={isSubmitting}>Add</button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n      <button className=\"close\" style={{\r\n        fontSize: \"2em\",\r\n        padding: 0,\r\n        border: \"none\",\r\n        cursor: \"pointer\",\r\n        position: \"absolute\",\r\n        top: \"0px\",\r\n        right: \"5px\",\r\n      }} onClick={hideAdd}> <FontAwesomeIcon icon={faWindowClose} /></button>\r\n    </ReactModal>\r\n  ), [modalData]);\r\n\r\n  const openAddModal = showAdd\r\n  const [showDel, hideDel] = useModal((...args) => (\r\n    <ReactModal ariaHideApp={false} appElement={document.getElementById('#root')} portalClassName=\"Modal\" style={\r\n      {\r\n        overlay:\r\n        {\r\n          backgroundColor: \"rgba(0, 0, 0, 0.75)\",\r\n          zIndex: 1200\r\n        },\r\n        content: { left: expanded ? \"240px\" : \"64px\", maxWidth: \"760px\", border: \"5px solid lightgray\", margin: \"0px auto\", bottom: \"auto\" }\r\n\r\n      }} isOpen onRequestClose={() => hideDel()}>\r\n      <h1 >Delete identity </h1>\r\n\r\n      <Formik\r\n        initialValues={{ id: modalData.id, name: modalData.name, meta: modalData.meta ? JSON.stringify(modalData.meta) : '' }}\r\n        validate={values => {\r\n          let errors = {};\r\n          if (!values.id) {\r\n            errors.id = 'Required';\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n        onSubmit={(values, { setSubmitting, setErrors, isValid }) => {\r\n          api.identities.remove(values.id, function (err) {\r\n            if (err) {\r\n              setErrors({ name: err.message })\r\n              setSubmitting(false);\r\n              return false;\r\n            }\r\n            setSubmitting(false);\r\n            hideDel()\r\n          });\r\n\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"colgroup\">\r\n\r\n              <h2>Are you sure you want to delete the identity?</h2>\r\n              <label htmlFor=\"id\">Id*</label>\r\n              <input\r\n                type=\"text\"\r\n                readOnly\r\n                name=\"id\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.id}\r\n              />\r\n            </div>\r\n            <div className=\"colgroup\">\r\n\r\n              <label htmlFor=\"name\"> Name </label>\r\n              <input\r\n                type=\"text\"\r\n                readOnly\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.name}\r\n              />\r\n            </div>\r\n            <ErrorMessage name=\"id\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n\r\n            <button type=\"submit\" disabled={isSubmitting}>Delete</button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n      <button className=\"close\" style={{\r\n        fontSize: \"2em\",\r\n        padding: 0,\r\n        border: \"none\",\r\n        display: 'block',\r\n        cursor: \"pointer\",\r\n        position: \"absolute\",\r\n        top: \"0px\",\r\n        right: \"5px\",\r\n      }} onClick={hideDel}> <FontAwesomeIcon icon={faWindowClose} /></button>\r\n    </ReactModal>\r\n  ), [modalData]);\r\n\r\n\r\n  const openDelModal = useCallback(data => {\r\n    setModalData(data);\r\n    showDel();\r\n  });\r\n\r\n  const [data, setData] = useState([])\r\n  const [groups, setGroups] = useState([])\r\n\r\n  useEffect(() => {\r\n    let abortable\r\n    let abortable2\r\n\r\n    if (api.identities && api.identities.ls) {\r\n      abortable = Abortable()\r\n      abortable2 = Abortable()\r\n\r\n      _(api.groups.ls({ live: true, old: true }), abortable2, _.drain((item) => {\r\n        if (!_.isPlainObject(item)) return\r\n        const index = groups.findIndex((ele) => ele.id === item.id)\r\n        if (index === -1) {\r\n          groups.push(item)\r\n          setGroups([...groups].filter((item) => item.delete !== true))\r\n          return\r\n        }\r\n        if (groups[index].ts < item.ts) {\r\n          groups[index] = item\r\n          setGroups([...groups].filter((item) => item.delete !== true))\r\n        }\r\n      }, () => { abortable2 = null }))\r\n\r\n      _(api.identities.ls({ live: true, old: true }), abortable, _.drain((item) => {\r\n        if (!_.isPlainObject(item)) return\r\n        const index = data.findIndex((ele) => ele.id === item.id)\r\n        if (index === -1) {\r\n          data.push(item)\r\n          setData([...data].filter((item) => item.delete !== true))\r\n          return\r\n        }\r\n\r\n        if (data[index].ts < item.ts) {\r\n          data[index] = item\r\n          setData([...data].filter((item) => item.delete !== true))\r\n        }\r\n\r\n\r\n      }, () => {\r\n        abortable = null\r\n      }))\r\n    }\r\n\r\n    return () => {\r\n      if (abortable) abortable.abort(true)\r\n      if (abortable2) abortable2.abort(true)\r\n\r\n    }\r\n  }, [connection])\r\n  let trigger = (open, item, index) => {\r\n\r\n    return (<div key={\"group_collapse_trigger_\" + item.id} style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n      {item.name ? (<div>{item.name}<small> ID:{item.id}</small></div>) : item.id} <div>\r\n        <button onClick={(e) => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          openDelModal(item)\r\n        }}> <FontAwesomeIcon icon={faTrash} /></button>\r\n        <button><FontAwesomeIcon icon={open ? faChevronUp : faChevronDown} /></button></div>\r\n    </div>)\r\n  }\r\n  return (<div className=\"identities\">\r\n    <h2>Identities</h2>\r\n    <button className=\"add\" onClick={openAddModal}><FontAwesomeIcon icon={faUserPlus} /> Add identity</button>\r\n    {data.map((identity, index) =>\r\n      <Collapsible\r\n        key={`identity_${identity.id}}`} classParentString=\"identity\"\r\n        trigger={trigger(false, identity, index)} triggerWhenOpen={trigger(true, identity, index)}\r\n      >\r\n\r\n        <Formik enableReinitialize={true}\r\n          initialValues={{ id: identity.id, name: identity.name, groups: identity.groups || [], meta: identity.meta, ts: identity.ts }}\r\n          validate={values => {\r\n            let errors = {};\r\n            if (!values.id) {\r\n              errors.id = 'Required';\r\n            }\r\n\r\n            //  errors.email = 'Invalid email address';\r\n\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, { setSubmitting, setErrors, isValid }) => {\r\n            setSubmitting(false);\r\n\r\n            api.identities.put({ id: values.id, name: values.name, groups: values.groups, meta: values.meta }, function (err) {\r\n              if (err) {\r\n                setErrors({ meta: err.message })\r\n                setSubmitting(false);\r\n                return false;\r\n              }\r\n              setSubmitting(false);\r\n            });\r\n\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            isSubmitting,\r\n          }) => (\r\n            <Form>\r\n              <div className=\"colgroup\">\r\n\r\n                <label htmlFor=\"id\">Id (string)</label>\r\n                <Field\r\n                  type=\"text\"\r\n                  readOnly\r\n                  name=\"id\"\r\n                  value={values.id}\r\n                />\r\n\r\n              </div>\r\n              <ErrorMessage name=\"id\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n\r\n              <div className=\"colgroup\">\r\n\r\n                <label htmlFor=\"name\">Name (string?)</label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                />\r\n\r\n              </div>\r\n              <ErrorMessage name=\"id\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n\r\n              <div className=\"colgroup\">\r\n\r\n                <label htmlFor=\"ts\"> Last modified </label>\r\n                <Field\r\n                  type=\"text\"\r\n                  readOnly\r\n                  name=\"ts\"\r\n\r\n                  value={new Date(values.ts).toLocaleString()}\r\n                />\r\n\r\n              </div>\r\n              <ErrorMessage name=\"ts\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n\r\n              <div className=\"colgroup\">\r\n\r\n                <label htmlFor=\"groups\">Groups (array|string?)</label>\r\n\r\n                <FieldArray\r\n                  name=\"groups\"\r\n                  render={arrayHelpers => (\r\n                    <div key={\"group_allow_\" + identity.id}>\r\n                      {values.groups.map((groupID, index) => {\r\n                        const gIndex = groups.findIndex((ele) => ele.id === groupID)\r\n                        let key = groupID;\r\n                        if (gIndex !== -1) {\r\n                          key = groups[gIndex].name + \" id:\" + groupID\r\n                        }\r\n                        return (\r\n                          <div key={\"allow_groups_\" + groupID + index}>\r\n                            <div className=\"addbar\"><Field readOnly label=\"field\" onChange={() => { }} value={key} name={`groups[${index}]`} />\r\n                              <button type=\"button\" onClick={() => arrayHelpers.remove(index)}>\r\n                                <FontAwesomeIcon icon={faMinusCircle}></FontAwesomeIcon>\r\n                              </button>\r\n\r\n                            </div>\r\n\r\n                          </div>\r\n                        )\r\n                      })}\r\n                      <div key={\"group_addbar\" + index} className=\"addbar\">\r\n                        <label>Group:</label>\r\n                        <FSelect isSearchable={false} className=\"select-container\"\r\n                          classNamePrefix=\"select\" key={\"allow_group_value_\" + index} name={\"allow_group_value_\" + index} options={groups.reduce((a, b) => {\r\n                            a.push({ label: b.name || b.id, value: b.id })\r\n                            return a\r\n                          }, [])} />\r\n\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => arrayHelpers.push(values[\"allow_group_value_\" + index] || \"\")}\r\n                        >\r\n                          <FontAwesomeIcon icon={faPlusCircle}></FontAwesomeIcon>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                />\r\n              </div>\r\n\r\n              <ErrorMessage name=\"groups\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n\r\n              <div className=\"colgroup\">\r\n\r\n                <label htmlFor=\"meta\"> Meta (object?)</label>\r\n\r\n\r\n                <Field\r\n\r\n                  name=\"meta\"\r\n                >\r\n                  {({ form, field, meta }) => {\r\n                    return (\r\n                      <div key={\"meta_content_\" + index}>\r\n                        {\r\n                          field.value ? Object.entries(flatten(field.value, { safe: false })).map((fitem, i) => {\r\n                            return (<div key={\"addbar_meta_\" + i + \"_\" + index} className=\"addbar\"><label>{\"meta.\" + fitem[0]}</label><input type=\"text\" readOnly={false} onChange={(e) => {\r\n                              let obj = field.value ? flatten(field.value, { safe: false }) : {}\r\n                              obj[fitem[0]] = e.target.value\r\n                              form.setFieldValue(field.name, unflatten(obj, { safe: false }))\r\n\r\n                            }} value={fitem[1]} />\r\n                              <button\r\n                                type=\"button\"\r\n                                onClick={() => {\r\n                                  let obj = field.value ? flatten(field.value, { safe: false }) : {}\r\n\r\n                                  delete obj[fitem[0]]\r\n                                  form.setFieldValue(field.name, unflatten(obj, { safe: false }))\r\n\r\n\r\n                                }}\r\n                              >\r\n                                <FontAwesomeIcon icon={faMinusCircle}></FontAwesomeIcon>\r\n                              </button>\r\n                            </div>)\r\n\r\n                          }) : ''\r\n                        }\r\n                        {meta.touched && meta.error && (\r\n                          <div className=\"error\">{meta.error}</div>\r\n                        )}\r\n                        {(<div key={\"addbar2_meta_\" + index} className=\"addbar\">\r\n\r\n                          <label>Key:</label><input name={\"key_meta_\" + index} value={form.values[\"key_meta_\" + index]} readOnly={false} type=\"text\" onChange={\r\n                            (e) => form.setFieldValue(\"key_meta_\" + index, e.target.value)\r\n                          } />\r\n                          <label>Value:</label><input name={\"value_meta_\" + index} value={form.values[\"value_meta_\" + index]} readOnly={false} type=\"text\" onChange={\r\n                            (e) => form.setFieldValue(\"value_meta_\" + index, e.target.value)\r\n                          } />\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              let obj = field.value ? flatten(field.value, { safe: false }) : {}\r\n\r\n                              obj[form.values[\"key_meta_\" + index]] = form.values[\"value_meta_\" + index]\r\n\r\n                              form.setFieldValue(\"value_meta_\" + index, \"\", false)\r\n                              form.setFieldValue(\"key_meta_\" + index, \"\", false)\r\n                              form.setFieldValue(field.name, unflatten(obj, { safe: false }))\r\n                            }}\r\n                          >\r\n                            <FontAwesomeIcon icon={faPlusCircle}></FontAwesomeIcon>\r\n                          </button>\r\n                        </div>\r\n                        )}\r\n                      </div>\r\n                    )\r\n                  }}\r\n\r\n                </Field>\r\n              </div>\r\n\r\n              <ErrorMessage name=\"meta\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n              <button type=\"submit\" disabled={isSubmitting}>Save</button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n\r\n      </Collapsible>\r\n    )}\r\n\r\n\r\n  </div>)\r\n}\r\n\r\n\r\nexport default Identitites","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { _ } from 'alligator-client'\r\nimport Abortable from 'pull-abortable'\r\nimport { useModal } from \"react-modal-hook\";\r\nimport ReactModal from 'react-modal';\r\nimport { Formik, ErrorMessage, Field, Form, FieldArray } from 'formik';\r\nimport { faChevronUp, faChevronDown, faPlusCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserPlus, faTrash, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\nimport Collapsible from 'react-collapsible';\r\nimport cuid from 'cuid';\r\nimport FSelect from './fselect'\r\n\r\n\r\nfunction Groups({ connection, expanded }) {\r\n  const [modalData, setModalData] = useState(null);\r\n  const api = connection.peer\r\n\r\n  const [showAdd, hideAdd] = useModal((...args) => (\r\n    <ReactModal  ariaHideApp={false} appElement={document.getElementById('#root')} portalClassName=\"Modal\" style={\r\n      {\r\n        overlay:\r\n        {\r\n          backgroundColor: \"rgba(0, 0, 0, 0.75)\",\r\n          zIndex: 1200\r\n        },\r\n        content: { left: expanded ? \"240px\" : \"64px\", maxWidth: \"760px\", border: \"5px solid lightgray\", margin: \"0px auto\", bottom: \"auto\" }\r\n\r\n      }} isOpen onRequestClose={() => hideAdd()}>\r\n      <h1 >Create a group</h1>\r\n\r\n      <Formik\r\n        initialValues={{ name: '', allow: '' }}\r\n        validate={values => {\r\n\r\n          let errors = {};\r\n          if (!values) return errors;\r\n          if (!values.name) {\r\n            errors.name = 'Required';\r\n          }\r\n          errors.name = 'Required';\r\n          return errors;\r\n        }}\r\n        onSubmit={(values, { setSubmitting, setErrors, isValid }) => {\r\n\r\n          api.groups.put(_.isPlainObject(values) ? { name: values.name, allow: values.allow } : null, function (err) {\r\n            if (err) {\r\n              setErrors({ allow: err.message })\r\n              setSubmitting(false);\r\n              return false;\r\n            }\r\n            setSubmitting(false);\r\n            hideAdd()\r\n          });\r\n\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"colgroup\">\r\n\r\n              <label htmlFor=\"name\"> Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.name}\r\n              />\r\n            </div>\r\n            <ErrorMessage name=\"name\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n\r\n            <div className=\"colgroup\">\r\n\r\n              <label htmlFor=\"allow\">Allow </label>\r\n\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"allow\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.allow}\r\n\r\n              />\r\n            </div>\r\n            <ErrorMessage name=\"allow\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n            <button type=\"submit\" disabled={isSubmitting}>Add</button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n      <button className=\"close\" style={{\r\n        fontSize: \"2em\",\r\n        padding: 0,\r\n        border: \"none\",\r\n        cursor: \"pointer\",\r\n        position: \"absolute\",\r\n        top: \"0px\",\r\n        right: \"5px\",\r\n      }} onClick={hideAdd}> <FontAwesomeIcon icon={faWindowClose} /></button>\r\n    </ReactModal>\r\n  ), [modalData]);\r\n\r\n\r\n  const openAddModal = showAdd\r\n  const [showDel, hideDel] = useModal((...args) => (\r\n    <ReactModal ariaHideApp={false} appElement={document.getElementById('#root')} portalClassName=\"Modal\" style={\r\n      {\r\n        overlay:\r\n        {\r\n          backgroundColor: \"rgba(0, 0, 0, 0.75)\",\r\n          zIndex: 1200\r\n        },\r\n        content: { left: expanded ? \"240px\" : \"64px\", maxWidth: \"760px\", border: \"5px solid lightgray\", margin: \"0px auto\", bottom: \"auto\" }\r\n\r\n      }} isOpen onRequestClose={() => hideDel()}>\r\n      <h1 >Delete group </h1>\r\n\r\n      <Formik\r\n        initialValues={{ id: modalData.id, name: modalData.name, allow: modalData.allow ? JSON.stringify(modalData.allow) : '' }}\r\n        validate={values => {\r\n          let errors = {};\r\n          if (!values.id) {\r\n            errors.id = 'Required';\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n        onSubmit={(values, { setSubmitting, setErrors, isValid }) => {\r\n          api.groups.remove(values.id, function (err) {\r\n            if (err) {\r\n              setErrors({ allow: err.message })\r\n              setSubmitting(false);\r\n              return false;\r\n            }\r\n            setSubmitting(false);\r\n            hideDel()\r\n          });\r\n\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"colgroup\">\r\n              <h2>Are you sure you want to delete this group?</h2>\r\n              <label htmlFor=\"id\">Id</label>\r\n              <input\r\n                type=\"text\"\r\n                readOnly\r\n                name=\"id\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.id}\r\n              />\r\n\r\n\r\n            </div>\r\n            <ErrorMessage name=\"id\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n            <div className=\"colgroup\">\r\n\r\n              <label htmlFor=\"name\"> Name</label>\r\n              <input\r\n                type=\"text\"\r\n                readOnly\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.name}\r\n              />\r\n\r\n            </div>\r\n            <ErrorMessage name=\"name\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n            <button type=\"submit\" disabled={isSubmitting}>Delete</button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n      <button style={{\r\n        fontSize: \"2em\",\r\n        padding: 0,\r\n        border: \"none\",\r\n        cursor: \"pointer\",\r\n        position: \"absolute\",\r\n        top: \"0px\",\r\n        right: \"5px\",\r\n      }} className=\"close\" onClick={hideDel}> <FontAwesomeIcon icon={faWindowClose} /></button>\r\n    </ReactModal>\r\n  ), [modalData]);\r\n\r\n\r\n  const openDelModal = useCallback(data => {\r\n    setModalData(data);\r\n    showDel();\r\n  });\r\n\r\n\r\n\r\n  const [data, setData] = useState([])\r\n  const [actions, setActions] = useState([])\r\n\r\n  useEffect(() => {\r\n    let abortable\r\n    const abort = (err) => {\r\n      if (abortable) {\r\n        abortable.abort(err || true)\r\n        abortable = null\r\n      }\r\n    }\r\n    if (connection && connection.peer && connection.peer.addrs) {\r\n\r\n      abortable = Abortable()\r\n\r\n      _(connection.peer.addrs({ live: true, old: true }), abortable, _.drain((item) => {\r\n\r\n        if (!_.isPlainObject(item)) return\r\n        const index = actions.findIndex((ele) => ele.action === item.action)\r\n        if (index === -1) {\r\n          actions.push({ index: cuid(), ...item })\r\n          setActions([...actions])\r\n          return\r\n        }\r\n\r\n        if (actions[index].ts < item.ts) {\r\n\r\n          item.index = actions[index].index\r\n          actions[index] = item\r\n          setActions([...actions])\r\n        }\r\n\r\n      }, abort))\r\n\r\n      return abort\r\n    }\r\n  }, [connection])\r\n\r\n  useEffect(() => {\r\n    let abortable\r\n    let abortable2\r\n\r\n    if (api.groups && api.groups.ls) {\r\n      abortable = Abortable()\r\n      abortable2 = Abortable()\r\n\r\n\r\n      _(api.groups.ls({ live: true, old: true }), abortable, _.drain((item) => {\r\n        if (!_.isPlainObject(item)) return\r\n        const index = data.findIndex((ele) => ele.id === item.id)\r\n\r\n        if (index === -1) {\r\n          data.push(item)\r\n          setData([...data].filter((item) => item.delete !== true))\r\n          return\r\n        }\r\n\r\n        if (data[index].ts < item.ts) {\r\n          data[index] = item\r\n          setData([...data].filter((item) => item.delete !== true))\r\n        }\r\n\r\n\r\n      }, () => {\r\n        abortable = null\r\n      }))\r\n    }\r\n\r\n    return () => {\r\n      if (abortable) abortable.abort(true)\r\n      if (abortable2) abortable2.abort(true)\r\n\r\n    }\r\n  }, [connection])\r\n\r\n  let trigger = (open, item, index) => {\r\n\r\n    return (<div key={\"group_collapse_trigger_\" + item.id} style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n      {item.name ? (<div>{item.name}<small> ID:{item.id}</small></div>) : item.id} <div>\r\n        <button onClick={(e) => {\r\n           e.preventDefault();\r\n           e.stopPropagation();\r\n          openDelModal(item)\r\n          }}> <FontAwesomeIcon icon={faTrash} /></button>\r\n        <button><FontAwesomeIcon icon={open ? faChevronUp : faChevronDown} /></button></div>\r\n    </div>)\r\n  }\r\n\r\n  return (<div className=\"groups\">\r\n\r\n    <h2>Groups</h2>\r\n    <button className=\"add\" onClick={openAddModal}><FontAwesomeIcon icon={faUserPlus} /> Add group</button>\r\n    {data.map((group, index) =>\r\n\r\n      <Collapsible\r\n        key={`group_${group.id}}`} classParentString=\"group\"\r\n        trigger={trigger(false, group, index)} triggerWhenOpen={trigger(true, group, index)}\r\n      >\r\n        <Formik enableReinitialize={true}\r\n          initialValues={{ id: group.id, name: group.name, allow: group.allow, ts: group.ts }}\r\n          validate={values => {\r\n            let errors = {};\r\n            if (!values.id) {\r\n              errors.id = 'Required';\r\n            }\r\n            if (!values.name) {\r\n              errors.name = 'Required';\r\n            }\r\n\r\n\r\n            //  errors.email = 'Invalid email address';\r\n\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, { setSubmitting, setErrors, isValid }) => {\r\n            api.groups.put({ id: values.id, name: values.name, allow: values.allow }, function (err, data) {\r\n              if (err) {\r\n                setErrors({ allow: err.message })\r\n                setSubmitting(false);\r\n                return false;\r\n              }\r\n              setSubmitting(false);\r\n            });\r\n\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            handleChange,\r\n            handleBlur,\r\n            isSubmitting,\r\n            /* and other goodies */\r\n          }) => (\r\n            <Form>\r\n              <div className=\"colgroup\">\r\n\r\n                <label htmlFor=\"id\"> Id </label>\r\n                <Field\r\n                  type=\"text\"\r\n                  readOnly\r\n                  name=\"id\"\r\n\r\n                  value={values.id}\r\n                />\r\n\r\n              </div>\r\n              <ErrorMessage name=\"id\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n              <div className=\"colgroup\">\r\n\r\n                <label htmlFor=\"ts\"> Last modified </label>\r\n                <Field\r\n                  type=\"text\"\r\n                  readOnly\r\n                  name=\"ts\"\r\n\r\n                  value={new Date(values.ts).toLocaleString()}\r\n                />\r\n\r\n              </div>\r\n              <ErrorMessage name=\"ts\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n\r\n\r\n              <div className=\"colgroup\">\r\n\r\n                <label htmlFor=\"name\"> Name </label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                />\r\n\r\n              </div>\r\n              <ErrorMessage name=\"name\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n\r\n\r\n              <div className=\"colgroup\">\r\n\r\n                <label htmlFor=\"allow\">Allow </label>\r\n\r\n                <FieldArray\r\n                  name=\"allow\"\r\n                  render={arrayHelpers => (\r\n                    <div key={\"group_allow_\" + group.id}>\r\n                      {values.allow.map((allow, index) => (\r\n                        <div key={\"allow\" + group.id + index}>\r\n                          <div className=\"addbar\"><Field readOnly name={`allow[${index}]`} />\r\n                            <button type=\"button\" onClick={() => arrayHelpers.remove(index)}>\r\n                            <FontAwesomeIcon icon={faMinusCircle}></FontAwesomeIcon>\r\n                            </button>\r\n\r\n                          </div>\r\n\r\n                        </div>\r\n                      ))}\r\n                      <div key={\"allow_addbar\" + index} className=\"addbar\">\r\n                        {/** both these conventions do the same */}\r\n                        <label>Function:</label>\r\n                        <FSelect isSearchable={false} className=\"select-container\"\r\n                          classNamePrefix=\"select\" key={\"allow_value_\" + index} name={\"allow_value_\" + index} options={actions.reduce((a, b) => {\r\n                            a.push({ label: b.action, value: b.action })\r\n                           \r\n                            return a\r\n                          }, [{ label: \"all\", value: \"*\" }])} />\r\n\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => arrayHelpers.push(values[\"allow_value_\" + index] || \"\")}\r\n                        >\r\n                             <FontAwesomeIcon icon={faPlusCircle}></FontAwesomeIcon>\r\n                      </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                />\r\n\r\n              </div>\r\n\r\n              <ErrorMessage name=\"allow\">{msg => <div className=\"error\">{msg}</div>}</ErrorMessage>\r\n              <button type=\"submit\" disabled={isSubmitting}>Save</button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n\r\n      </Collapsible>\r\n    )}\r\n\r\n\r\n  </div>)\r\n}\r\n\r\n\r\nexport default Groups","import Functions from \"./funcs.js\"\r\nimport Identities from \"./identities.js\"\r\nimport Groups from \"./groups.js\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAddressBook, faUsers, faUsersCog } from '@fortawesome/free-solid-svg-icons'\r\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport util from \"icebreaker-network/lib/util\"\r\n\r\n\r\nfunction NoMatch() {\r\n  return (<h1>404 not found</h1>)\r\n}\r\n\r\nfunction Main({ location, setLocation, connection, peerInfo }) {\r\n  const menu = [\r\n\r\n    {\r\n      title: \"Functions\",\r\n      icon: faAddressBook,\r\n      path: \"/functions\",\r\n      load: Functions\r\n    },\r\n    {\r\n      title: \"Identitites\",\r\n      icon: faUsers,\r\n      path: \"/identitites\",\r\n      load: Identities\r\n    },\r\n\r\n\r\n    {\r\n      title: \"Groups\",\r\n      icon: faUsersCog,\r\n      path: \"/groups\",\r\n      load: Groups\r\n    }\r\n\r\n  ]\r\n  const [expanded, setExpanded] = useState(false)\r\n\r\n  return (\r\n    <div style={{ paddingLeft: expanded ? \"240px\" : \"64px\", display: \"flex\", flexDirection: \"column\" }}>\r\n\r\n      <div>\r\n        <SideNav style={{ background: \"black\", position: \"fixed\" }} expanded={expanded}\r\n          onToggle={(expanded) => setExpanded(expanded)}\r\n          onSelect={(selected) => {\r\n            setLocation(selected)\r\n            setExpanded(false);\r\n            //seselected\r\n          }}\r\n        >\r\n          <SideNav.Toggle />\r\n          <SideNav.Nav defaultSelected={menu[0].path}>\r\n            {menu.map((item, index) => (\r\n              <NavItem key={\"navitem\" + index} eventKey={item.path} >\r\n                <NavIcon key={\"navicon\" + index} >\r\n                  <FontAwesomeIcon icon={item.icon} />\r\n                </NavIcon>\r\n                <NavText key={\"navtext\" + index}>\r\n                  {item.title}\r\n                </NavText>\r\n              </NavItem>\r\n            ))}\r\n          </SideNav.Nav>\r\n        </SideNav>\r\n      </div>\r\n\r\n\r\n      <div>\r\n        <div className=\"header\">\r\n          <div className=\"left\">\r\n\r\n            <h1>Alligator Island</h1>\r\n            <div className=\"id\">ID: {peerInfo ? util.encode(peerInfo.keys.publicKey, peerInfo.encoding) : ''}</div>\r\n          </div>\r\n          <div>\r\n            <img alt=\"Alligator Island\" className=\"logo\" src=\"./logo.png\" />\r\n          </div>\r\n        </div>\r\n        <Switch location={{ pathname: location, state: { fromDashboard: true } }}>\r\n          {menu.map((item, k) => (<Route key={\"menu\" + k} path={item.path} render={() => (<item.load connection={connection} expanded={expanded}  {...item}></item.load>)} />))}\r\n          <Route component={NoMatch} />\r\n        </Switch>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default Main","\nimport './App.css';\nimport { Connect, PeerInfo } from 'alligator-client';\nimport React, { useState } from 'react';\nimport 'typeface-source-code-pro'\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport Login from \"./login.js\"\nimport Main from \"./main.js\"\n\nfunction getPeerInfo() {\n  let peerInfo = localStorage.getItem('peerInfo');\n  if (!peerInfo) localStorage.setItem(\"peerInfo\", peerInfo = PeerInfo().toJSON())\n  return PeerInfo.fromJSON(peerInfo)\n}\n\nfunction App() {\n\n  let [connection, setConnection] = useState()\n\n  const peerInfo = getPeerInfo()\n  const l = useLocation();\n\n  const [location, setLocation] = useState(connection && l && l.pathname ? l.pathname : \"/login\")\n\n  const routes = [\n    {\n      path: \"/login\",\n      load: Login,\n      peerInfo,\n      onSubmit: (values, { setSubmitting, setErrors }) => {\n        Connect(values.url, null, getPeerInfo(), (err, e) => {\n          if (err) return setErrors({ url: err.message })\n          setConnection(e)\n          setLocation(\"/functions\")\n        }, (err) => {\n          setConnection(null)\n          setLocation(\"/login\")\n\n        })\n        setSubmitting(false)\n      }\n    },\n    {\n      path: \"/\",\n      load: Main,\n      connection,\n      peerInfo,\n      location,\n      setLocation\n\n    }\n  ]\n\n\n  return (\n\n    <Switch location={{ pathname: location, state: { fromDashboard: true } }}>\n      {routes.map((item, k) => (<Route key={\"main\" + k} path={item.path} render={() => (<item.load {...item}></item.load>)} />))}\n    </Switch>\n\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport { ModalProvider } from \"react-modal-hook\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <ModalProvider><App /></ModalProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//reportWebVitals();\n"],"sourceRoot":""}